plugins {
    id 'maven-publish'
}
apply from: "../config/library.gradle"

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:${gradle.androidxAppcompat}"

    testImplementation "junit:junit:${gradle.androidxJunit}"
    androidTestImplementation "androidx.test.ext:junit:${gradle.androidxTestJunit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${gradle.androidxTestEspresso}"
}

def isPublishingRelease = gradle.mavePublishingRelease
def mavenVersion = '1.0'
def destinationOutputDir = 'build/outputs/aar'
project.version = "${mavenVersion}-${isPublishingRelease ? 'release' : 'SNAPSHOT'}"

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    destinationDirectory = file(destinationOutputDir)
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId "${gradle.maveGroupId}"
            artifactId "${project.name.toLowerCase()}"
            version "${project.version}"

            // build/outputs/aar/Font-debug.aar
            artifact "${destinationOutputDir}/${project.name}-${isPublishingRelease ? 'release' : 'debug'}.aar"
            artifact sourcesJar

            // The publication doesn't know about our dependencies,
            // so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    if (it.group != null && it.name != null && "unspecified" != it.name && it.version != null) {
                        addPomDependencies(it, dependenciesNode)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            // 配置仓库地址 Configure warehouse address
            if (isPublishingRelease) {
                url = "${gradle.maveUrlRelease}"
//                credentials {
//                    username = System.getenv('OSS_USER')
//                    password = System.getenv('OSS_PASSWORD')
//                }
            } else {
                url = "${gradle.maveUrlSnapshot}"
            }
        }
    }
}
